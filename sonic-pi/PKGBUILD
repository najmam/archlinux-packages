# Maintainer: David Runge <dvzrv@archlinux.org>
# Contributor: Naji Mammeri <dev@njmm.fr>

pkgname=sonic-pi
pkgver=4.3.0
pkgrel=1
pkgdesc="The Live Coding Music Synth for Everyone"
arch=(x86_64)
url="https://sonic-pi.net/"
license=(CCPL LGPL2.1 GPL2 GPL3 MIT)
groups=(pro-audio)
depends=(aubio gcc-libs glibc jack-example-tools osmid qt5-base qt6-base
ruby ruby-activesupport ruby-ffi ruby-gettext ruby-i18n ruby-kramdown
ruby-locale ruby-minitest ruby-mocha ruby-multi_json ruby-polyglot ruby-rouge
ruby-rugged ruby-sys-proctable ruby-text ruby-treetop sc3-plugins
flac supercollider)
makedepends=(boost cmake zip unzip git gendesk chrpath
erlang-nox elixir ruby-bundler
qt5-tools qt6-tools qt6-svg)
checkdepends=(ruby-rake)
optdepends=('sox: for further effects')
source=(
  $pkgname-$pkgver.tar.gz::https://github.com/samaaron/${pkgname}/archive/v${pkgver}.tar.gz
  $pkgname-4.3.0-cmake.patch
  $pkgname-4.3.0-devendor_aubio.patch
  $pkgname-4.3.0-devendor_boost.patch
  $pkgname-4.3.0-devendor_qscintilla-qt5.patch
  $pkgname-4.3.0-fix_gui_paths.patch
  $pkgname-4.3.0-fix_ruby_paths.patch
)
sha512sums=('fa5b153212f3ca01c3736a9b53932235f7b6a02313d7c1b12c112d122e68c9f00a0052791c7d07adcbda1638f3dc18d238dc133d2d44b913994959e0055877b6'
            'f6cb162970c3e373f1ae3a26147aa4e2cedbdedc8098e53808f2594295a042eaf50e15425ee08ee6316b033290cf26b2f410d8fc43d2e2a7a1847b818e18ebe9'
            '68550a679b3ca93b67f65930c9e3e9936d988cb379acb4c839f023ec44b38f02ec39f12c1957187688037d912a0c7498898830dd22fca6bf2f3e248fa3448d32'
            'a8be218baea535ad46f0f267882d2dd4eb8165c8c6b59240f56efba115d899622fc472ea77e9df718318eae0e0358ea7b9e38f916d76f279fba33d47b7b19b05'
            'afa3717eb2e67505f9623bd48a83369f8093d514434435f71444331dc99b302ffcafe78d0f7d21061ebb942aecd2a3b94d1cfa22ec79cef4aa86e2f021ba8075'
            'f0a1dfe0d30956e63b236f3fdda372065d971ad77399fbe540ae33d81fff41d7922b4b071e36917dc135abf48dd20226e31e8f708074c91873dfe31852d8887b'
            'ec9dca1d1ec51d964c6353544987fc493bde7cd0afe123dab321f304031977213e01dec0bd05313a8f301eb16f7653fbc3195ea061666e6fc891b37b7486cea5')
b2sums=('c9f2cfe42650931461149f90193d76deed6dc497ea433c5880c9f44bfd1298c28fde910b0377374e6f0af60ce41540a757f2f9805bd3171126c804ab43dca280'
        'df369b56ba06314caa81192ae8c0867e500ea8adf056052249bab586ee2a01cb192042b5b20473dd8679cd8ab3c9f4e204b48ea21dfd04b56854fbb78e35b6b3'
        '7e194ee4d00668337ddf25d8a6676b096e7037e04a6b2273fb77bb1bbafed85ba425b1ae3fb9d690df53bc0dd1f73b99a47a07964e68802e55868fc269d7681c'
        '2ef587aaf3b12f48695954b095543708e35188f4e27cc903cae81a63303d7ff7b0ed2b7c2f508eaf72b2a1290ed7274cd61d97cc123ec933d4dd6f726e54eccd'
        '2e559d33ffbb94767257e618c9a022fd07d7778ae18075dca4d756cb15c38630939b90d5984745d3763abca2fc90a259489b3d8df14c03b1871cd2b66b3d68c7'
        '22344537f6ab41144d4f8ee0f124d843a8d109ad9fa3338db17803a7b23b35bac7c6451deced344afd214f84a421bc67d480df57c333437aaf1267139c104f01'
        'b10fb3cef52a0a1653f09685e7840928a0b21e43d4769ac9c38e23ebf52ed04e2a8ee98eef572c244231f6c0ea0c286e03ba5da4dee7d17b8abb218bc0ccb7d2')

prepare() {
  cd $pkgname-$pkgver
  gendesk -n \
          --pkgname $pkgname \
          --pkgdesc "$pkgdesc" \
          --name "Sonic Pi" \
          --categories "AudioVideo;Audio"
  rm -rvf app/server/native/*

  # devendor gems requiring compilation:
  # ffi, ruby-prof, rugged
  sed -e '/rugged/d' \
      -e '/ffi/d' \
      -e '/ruby-prof/d' \
      -i app/server/ruby/bin/compile-extensions.rb
  # remove unrequired gems, so we don't create any doc for them
  rm -rvf app/server/ruby/vendor/{activesupport,ffi,gettext,i18n,kramdown,locale,minitest,mocha,multi_json,polyglot,rouge,rugged,sys-proctable,text,treetop}*
  rm -rvf app/server/ruby/vendor/{narray,ruby-coreaudio,ruby-prof,rake-compiler}*

  patch -Np1 -i "../$pkgname-4.3.0-cmake.patch"
  patch -Np1 -i "../$pkgname-4.3.0-devendor_aubio.patch"
  patch -Np1 -i "../$pkgname-4.3.0-devendor_boost.patch" # scsynth-boost
  patch -Np1 -i "../$pkgname-4.3.0-fix_gui_paths.patch"

  ## devendor qscintilla, which takes a long time to build.
  # This used to work with sonic-pi 3.3.1, but I (njmm) didn't manage to make it work with 4.3.0.
  # Applying the patch results in a missing include on <Qsci/qsciscintilla.h>.
  # Adding /usr/include/qt6 to target_include_directories in app/gui/qt/CMakeLists.txt solves this,
  # but then the build breaks later, when compiling sonic-pi_automoc.cpp, which is generated using AutoMoc.
  # The error is that macro QT_CORE_REMOVED_SINCE is undefined, while it is present in /usr/include/qt6.
  # Internet literarure seems to suggest that cmake's Automoc does not make its generated files require
  # all necessary header files.
  # I have not looked further than this. If you try, first add qscintilla-qt5 to `depends`.
  # patch -Np1 -i "../$pkgname-4.3.0-devendor_qscintilla-qt5.patch"

  # TODO devendor the following libraries, when possible.
  # Some are present in the Arch repos as of 2022-12-25.
  ## present in extra/community
  # - QScintilla (c++, version ok) cf previous PKGBUILDs and https://github.com/samaaron/sonic-pi/issues/2278
  # - aubio_onset (c++, version ok) cf app/server/native/
  # - scsynth-boost (c++)
  # - libuuid (c++, built through vcpkg) ?
  ## in the AUR
  # - catch2 (c++, built through vcpkg) cf aur/catch2v3
  # - platform-folders (c++, built through vcpkg) cf aur/platformfolders
  # - reproc (c++, built through vcpkg) cf aur/reproc
  # - ruby-wavefile 0.8.1, aur version out-of-date
  ## c++ libs not in Arch official repos nor the AUR
  # - kissfft
  # - crossguid
  ## ruby gems
  # - atomic (bin)
  # - ast-2.0.0
  # - benchmark-ips-2.3.0
  # - blankslate
  # - interception (bin)
  # - memoist-0.16.2
  # - metaclass-0.0.4
  # - rubame
  # - ruby-beautify
  # - ruby-prof-0.15.8
  # - thread_safe
  # - tomlrb-2.0.0
  # - websocket-ruby-1.2.8
}

build() {
  cd "$pkgname-$pkgver"
  cd app
  ./linux-prebuild.sh --no-imgui -c Release
  ./linux-config.sh --no-imgui -c Release
  ./linux-build-gui.sh --no-imgui -c Release
  ./linux-post-tau-prod-release.sh --no-imgui -c Release
}

# v4.3.0: Ruby and Elixir tests succeed, api-tests fail.
# based on https://github.com/sonic-pi-net/sonic-pi/blob/stable/.github/workflows/build.yml
# check() {
#   cd "$pkgname-$pkgver"
#   (
#     cd app/server/ruby
#     rake test
#   )
#   (
#     cd app/server/beam/tau
#     mix test
#   )
#   (
#     cd app/build/api-tests
#     jackd -rd dummy &
#     sleep 1
#     ctest --verbose
#   )
# }

package() {
  cd "$pkgname-$pkgver"

  (
    cd app
    ./linux-release.sh --no-imgui -c Release
  )

  (
    # patch Ruby server to set proper paths to external components
    # NOTE: this can only be done after running app/server/ruby/bin/compile-extensions.rb
    #       (which is called by ./linux-config.sh), as ruby-wavefile uses a hardcoded location.
    #       Move to prepare() after devendoring more ruby gems.
    # Also, qt-doc.rb, which is called by ./linux-prebuild.sh, reads server/ruby/paths.rb.
    cd app/build/linux_dist
    patch -Np1 -i "../../../../${pkgname}-4.3.0-fix_ruby_paths.patch"
  )

  (
  cd app/build/linux_dist
  # GUI executable
  install -vDm 755 "app/build/gui/qt/$pkgname" -t "$pkgdir/usr/bin/"
  # i18n
  install -vDm 644 app/gui/qt/lang/*.qm -t "$pkgdir/usr/share/$pkgname/app/gui/qt/lang/"
  # theme
  install -vDm 644 app/gui/qt/theme/*.qss -t "$pkgdir/usr/share/$pkgname/app/gui/qt/theme/"
  install -vDm 644 app/gui/qt/theme/dark/* -t "$pkgdir/usr/share/$pkgname/app/gui/qt/theme/dark/"
  install -vDm 644 app/gui/qt/theme/high_contrast/* -t "$pkgdir/usr/share/$pkgname/app/gui/qt/theme/high_contrast/"
  install -vDm 644 app/gui/qt/theme/light/* -t "$pkgdir/usr/share/$pkgname/app/gui/qt/theme/light/"
  # snippets
  install -vDm 644 etc/snippets/syntax/* -t "$pkgdir/usr/share/$pkgname/snippets/syntax/"
  install -vDm 644 etc/snippets/fx/* -t "$pkgdir/usr/share/$pkgname/snippets/fx/"
  install -vDm 644 etc/snippets/live_loop/* -t "$pkgdir/usr/share/$pkgname/snippets/live_loop/"
  # samples
  install -vDm 644 etc/samples/*.{flac,md} -t "$pkgdir/usr/share/$pkgname/samples/"
  # synthdefs
  install -vDm 644 etc/synthdefs/compiled/*.scsyndef -t "$pkgdir/usr/share/$pkgname/synthdefs/compiled/"
  install -vDm 644 etc/synthdefs/designs/overtone/$pkgname/*.clj -t "$pkgdir/usr/share/$pkgname/synthdefs/designs/overtone/"
  install -vDm 644 etc/synthdefs/designs/overtone/$pkgname/src/sonic_pi/*.clj -t "$pkgdir/usr/share/$pkgname/synthdefs/designs/overtone/sonic_pi/src/"
  install -vDm 644 etc/synthdefs/designs/overtone/$pkgname/test/sonic_pi/*.clj -t "$pkgdir/usr/share/$pkgname/synthdefs/designs/overtone/sonic_pi/test/"
  install -vDm 644 etc/synthdefs/designs/supercollider/* -t "$pkgdir/usr/share/$pkgname/synthdefs/designs/supercollider/"
  # buffers
  install -vDm 644 etc/buffers/*.wav -t "$pkgdir/usr/share/$pkgname/buffers/"
  # docs
  install -vDm 644 etc/doc/lang/* -t "$pkgdir/usr/share/$pkgname/doc/lang/"
  install -vDm 644 etc/doc/cheatsheets/* -t "$pkgdir/usr/share/$pkgname/doc/cheatsheets/"
  install -vDm 644 etc/doc/tutorial/*.md -t "$pkgdir/usr/share/$pkgname/doc/tutorial/"
  install -vdm 755 "$pkgdir/usr/share/$pkgname/doc/images/tutorial/"
  cp -av etc/doc/images/tutorial/* "$pkgdir/usr/share/$pkgname/doc/images/tutorial/"
  # examples
  install -vDm 644 etc/examples/algomancer/*.rb -t "$pkgdir/usr/share/$pkgname/examples/algomancer/"
  install -vDm 644 etc/examples/apprentice/*.rb -t "$pkgdir/usr/share/$pkgname/examples/apprentice/"
  install -vDm 644 etc/examples/illusionist/*.rb -t "$pkgdir/usr/share/$pkgname/examples/illusionist/"
  install -vDm 644 etc/examples/incubation/*.rb -t "$pkgdir/usr/share/$pkgname/examples/incubation/"
  install -vDm 644 etc/examples/magician/*.rb -t "$pkgdir/usr/share/$pkgname/examples/magician/"
  install -vDm 644 etc/examples/sorcerer/*.rb -t "$pkgdir/usr/share/$pkgname/examples/sorcerer/"
  install -vDm 644 etc/examples/wizard/*.rb -t "$pkgdir/usr/share/$pkgname/examples/wizard/"
  # example user configs
  install -vDm 644 app/config/user-examples/* -t "$pkgdir/usr/share/$pkgname/config/user-examples/"
  # erlang server
  install -vdm 755 "$pkgdir/usr/lib/$pkgname/app/server/beam/tau"
  cp -a app/server/beam/tau/* "$pkgdir/usr/lib/$pkgname/app/server/beam/tau/"
  chrpath --delete "$pkgdir/usr/lib/sonic-pi/app/server/beam/tau/_build/prod/rel/tau/lib/crypto-5.1.2/priv/lib/crypto.so"
  chrpath --delete "$pkgdir/usr/lib/sonic-pi/app/server/beam/tau/_build/prod/rel/tau/lib/crypto-5.1.2/priv/lib/otp_test_engine.so"
  # ruby server
  install -vdm 755 "$pkgdir/usr/lib/$pkgname/app/server/ruby"
  cp -a app/server/ruby/* "$pkgdir/usr/lib/$pkgname/app/server/ruby/"
  find "$pkgdir/usr/lib/$pkgname/app/server/ruby" -type f \( -iname "*.o" -or -iname "*.c" -or -iname "*Rakefile" \) -delete
  )

  # xdg
  install -vDm 644 $pkgname.desktop -t "$pkgdir/usr/share/applications/"
  install -vDm 644 app/gui/qt/images/icon-smaller.png "$pkgdir/usr/share/pixmaps/$pkgname.png"

  # license
  install -vDm 644 LICENSE.md -t "$pkgdir/usr/share/licenses/$pkgname/"
}
